#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ASPNETDB")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertuser_profile(user_profile instance);
  partial void Updateuser_profile(user_profile instance);
  partial void Deleteuser_profile(user_profile instance);
  partial void Insertaspnet_User(aspnet_User instance);
  partial void Updateaspnet_User(aspnet_User instance);
  partial void Deleteaspnet_User(aspnet_User instance);
  partial void Insertmessage(message instance);
  partial void Updatemessage(message instance);
  partial void Deletemessage(message instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["FriendsConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<user_profile> user_profiles
	{
		get
		{
			return this.GetTable<user_profile>();
		}
	}
	
	public System.Data.Linq.Table<friend> friends
	{
		get
		{
			return this.GetTable<friend>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_User> aspnet_Users
	{
		get
		{
			return this.GetTable<aspnet_User>();
		}
	}
	
	public System.Data.Linq.Table<message> messages
	{
		get
		{
			return this.GetTable<message>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_profile")]
public partial class user_profile : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _userid;
	
	private string _fullname;
	
	private string _plec;
	
	private System.Nullable<System.DateTime> _birthdate;
	
	private string _opis;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuseridChanging(System.Guid value);
    partial void OnuseridChanged();
    partial void OnfullnameChanging(string value);
    partial void OnfullnameChanged();
    partial void OnplecChanging(string value);
    partial void OnplecChanged();
    partial void OnbirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdateChanged();
    partial void OnopisChanging(string value);
    partial void OnopisChanged();
    #endregion
	
	public user_profile()
	{
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid userid
	{
		get
		{
			return this._userid;
		}
		set
		{
			if ((this._userid != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnuseridChanging(value);
				this.SendPropertyChanging();
				this._userid = value;
				this.SendPropertyChanged("userid");
				this.OnuseridChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullname", DbType="NVarChar(50)")]
	public string fullname
	{
		get
		{
			return this._fullname;
		}
		set
		{
			if ((this._fullname != value))
			{
				this.OnfullnameChanging(value);
				this.SendPropertyChanging();
				this._fullname = value;
				this.SendPropertyChanged("fullname");
				this.OnfullnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plec", DbType="NVarChar(50)")]
	public string plec
	{
		get
		{
			return this._plec;
		}
		set
		{
			if ((this._plec != value))
			{
				this.OnplecChanging(value);
				this.SendPropertyChanging();
				this._plec = value;
				this.SendPropertyChanged("plec");
				this.OnplecChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthdate", DbType="Date")]
	public System.Nullable<System.DateTime> birthdate
	{
		get
		{
			return this._birthdate;
		}
		set
		{
			if ((this._birthdate != value))
			{
				this.OnbirthdateChanging(value);
				this.SendPropertyChanging();
				this._birthdate = value;
				this.SendPropertyChanged("birthdate");
				this.OnbirthdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis", DbType="VarChar(500)")]
	public string opis
	{
		get
		{
			return this._opis;
		}
		set
		{
			if ((this._opis != value))
			{
				this.OnopisChanging(value);
				this.SendPropertyChanging();
				this._opis = value;
				this.SendPropertyChanged("opis");
				this.OnopisChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_user_profile", Storage="_aspnet_User", ThisKey="userid", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.user_profile = null;
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.user_profile = this;
					this._userid = value.UserId;
				}
				else
				{
					this._userid = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.friends")]
public partial class friend
{
	
	private System.Guid _userid;
	
	private System.Guid _friendid;
	
	public friend()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid userid
	{
		get
		{
			return this._userid;
		}
		set
		{
			if ((this._userid != value))
			{
				this._userid = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_friendid", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid friendid
	{
		get
		{
			return this._friendid;
		}
		set
		{
			if ((this._friendid != value))
			{
				this._friendid = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _UserId;
	
	private string _UserName;
	
	private string _LoweredUserName;
	
	private string _MobileAlias;
	
	private bool _IsAnonymous;
	
	private System.DateTime _LastActivityDate;
	
	private EntityRef<user_profile> _user_profile;
	
	private EntitySet<message> _messages;
	
	private EntitySet<message> _messages1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
	
	public aspnet_User()
	{
		this._user_profile = default(EntityRef<user_profile>);
		this._messages = new EntitySet<message>(new Action<message>(this.attach_messages), new Action<message>(this.detach_messages));
		this._messages1 = new EntitySet<message>(new Action<message>(this.attach_messages1), new Action<message>(this.detach_messages1));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredUserName
	{
		get
		{
			return this._LoweredUserName;
		}
		set
		{
			if ((this._LoweredUserName != value))
			{
				this.OnLoweredUserNameChanging(value);
				this.SendPropertyChanging();
				this._LoweredUserName = value;
				this.SendPropertyChanged("LoweredUserName");
				this.OnLoweredUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
	public string MobileAlias
	{
		get
		{
			return this._MobileAlias;
		}
		set
		{
			if ((this._MobileAlias != value))
			{
				this.OnMobileAliasChanging(value);
				this.SendPropertyChanging();
				this._MobileAlias = value;
				this.SendPropertyChanged("MobileAlias");
				this.OnMobileAliasChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
	public bool IsAnonymous
	{
		get
		{
			return this._IsAnonymous;
		}
		set
		{
			if ((this._IsAnonymous != value))
			{
				this.OnIsAnonymousChanging(value);
				this.SendPropertyChanging();
				this._IsAnonymous = value;
				this.SendPropertyChanged("IsAnonymous");
				this.OnIsAnonymousChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastActivityDate
	{
		get
		{
			return this._LastActivityDate;
		}
		set
		{
			if ((this._LastActivityDate != value))
			{
				this.OnLastActivityDateChanging(value);
				this.SendPropertyChanging();
				this._LastActivityDate = value;
				this.SendPropertyChanged("LastActivityDate");
				this.OnLastActivityDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_user_profile", Storage="_user_profile", ThisKey="UserId", OtherKey="userid", IsUnique=true, IsForeignKey=false)]
	public user_profile user_profile
	{
		get
		{
			return this._user_profile.Entity;
		}
		set
		{
			user_profile previousValue = this._user_profile.Entity;
			if (((previousValue != value) 
						|| (this._user_profile.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._user_profile.Entity = null;
					previousValue.aspnet_User = null;
				}
				this._user_profile.Entity = value;
				if ((value != null))
				{
					value.aspnet_User = this;
				}
				this.SendPropertyChanged("user_profile");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_message", Storage="_messages", ThisKey="UserId", OtherKey="receivid")]
	public EntitySet<message> messages
	{
		get
		{
			return this._messages;
		}
		set
		{
			this._messages.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_message1", Storage="_messages1", ThisKey="UserId", OtherKey="receivid")]
	public EntitySet<message> messages1
	{
		get
		{
			return this._messages1;
		}
		set
		{
			this._messages1.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_messages(message entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_messages(message entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
	
	private void attach_messages1(message entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = this;
	}
	
	private void detach_messages1(message entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.message")]
public partial class message : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _msgid;
	
	private System.Nullable<System.Guid> _sendid;
	
	private System.Nullable<System.Guid> _receivid;
	
	private string _mssg;
	
	private System.Nullable<System.DateTime> _sentdate;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
	private EntityRef<aspnet_User> _aspnet_User1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmsgidChanging(int value);
    partial void OnmsgidChanged();
    partial void OnsendidChanging(System.Nullable<System.Guid> value);
    partial void OnsendidChanged();
    partial void OnreceividChanging(System.Nullable<System.Guid> value);
    partial void OnreceividChanged();
    partial void OnmssgChanging(string value);
    partial void OnmssgChanged();
    partial void OnsentdateChanging(System.Nullable<System.DateTime> value);
    partial void OnsentdateChanged();
    #endregion
	
	public message()
	{
		this._aspnet_User = default(EntityRef<aspnet_User>);
		this._aspnet_User1 = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msgid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int msgid
	{
		get
		{
			return this._msgid;
		}
		set
		{
			if ((this._msgid != value))
			{
				this.OnmsgidChanging(value);
				this.SendPropertyChanging();
				this._msgid = value;
				this.SendPropertyChanged("msgid");
				this.OnmsgidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sendid", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> sendid
	{
		get
		{
			return this._sendid;
		}
		set
		{
			if ((this._sendid != value))
			{
				this.OnsendidChanging(value);
				this.SendPropertyChanging();
				this._sendid = value;
				this.SendPropertyChanged("sendid");
				this.OnsendidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receivid", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> receivid
	{
		get
		{
			return this._receivid;
		}
		set
		{
			if ((this._receivid != value))
			{
				if ((this._aspnet_User.HasLoadedOrAssignedValue || this._aspnet_User1.HasLoadedOrAssignedValue))
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnreceividChanging(value);
				this.SendPropertyChanging();
				this._receivid = value;
				this.SendPropertyChanged("receivid");
				this.OnreceividChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mssg", DbType="NVarChar(MAX)")]
	public string mssg
	{
		get
		{
			return this._mssg;
		}
		set
		{
			if ((this._mssg != value))
			{
				this.OnmssgChanging(value);
				this.SendPropertyChanging();
				this._mssg = value;
				this.SendPropertyChanged("mssg");
				this.OnmssgChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sentdate", DbType="DateTime")]
	public System.Nullable<System.DateTime> sentdate
	{
		get
		{
			return this._sentdate;
		}
		set
		{
			if ((this._sentdate != value))
			{
				this.OnsentdateChanging(value);
				this.SendPropertyChanging();
				this._sentdate = value;
				this.SendPropertyChanged("sentdate");
				this.OnsentdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_message", Storage="_aspnet_User", ThisKey="receivid", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.messages.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.messages.Add(this);
					this._receivid = value.UserId;
				}
				else
				{
					this._receivid = default(Nullable<System.Guid>);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_message1", Storage="_aspnet_User1", ThisKey="receivid", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User1
	{
		get
		{
			return this._aspnet_User1.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User1.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User1.Entity = null;
					previousValue.messages1.Remove(this);
				}
				this._aspnet_User1.Entity = value;
				if ((value != null))
				{
					value.messages1.Add(this);
					this._receivid = value.UserId;
				}
				else
				{
					this._receivid = default(Nullable<System.Guid>);
				}
				this.SendPropertyChanged("aspnet_User1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
